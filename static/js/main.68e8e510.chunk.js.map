{"version":3,"sources":["Die.js","Dice.js","RuleRow.js","Rules.js","ScoreTable.js","Game.js","App.js","serviceWorker.js","index.js"],"names":["Die","props","handleClick","bind","this","idx","numberWords","locked","val","disabled","rolling","classes","className","onClick","Component","defaultProps","Dice","dice","map","d","key","RuleRow","score","name","doScore","description","undefined","Rule","params","Object","assign","reduce","prev","curr","freqs","Map","set","get","Array","from","values","filter","length","TotalOneNumber","evalRoll","count","SumDistro","freq","some","c","sum","FullHouse","includes","SmallStraight","Set","has","LargeStraight","size","Yahtzee","ones","twos","threes","fours","fives","sixes","threeOfKind","fourOfKind","fullHouse","smallStraight","largeStraight","yahtzee","chance","ScoreTable","scores","totalScore","cellSpacing","evt","getTotalScore","Game","state","fill","rollsLeft","console","log","roll","toggleLocked","animateRoll","setState","setTimeout","st","i","Math","ceil","random","slice","rulename","ruleFn","every","x","displayRollInfo","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.68e8e510.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Die.css\";\n\nclass Die extends Component {\n  static defaultProps = {\n    numberWords: [\"one\", \"two\", \"three\", \"four\", \"five\", \"six\"],\n    val: 5\n  };\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick() {\n    this.props.handleClick(this.props.idx);\n  }\n\n  render() {\n    const { numberWords, locked, val, disabled, rolling } = this.props;\n    let classes = `Die fas fa-dice-${numberWords[val - 1]} fa-5x `;\n    if (locked) classes += \"Die-locked\";\n    if (rolling) classes += \"Die-rolling\";\n    return (\n      <i className={classes} onClick={this.handleClick} disabled={disabled} />\n    );\n  }\n}\n\nexport default Die;\n","import React, { Component } from \"react\";\nimport Die from \"./Die\";\nimport \"./Dice.css\";\n\nclass Dice extends Component {\n  render() {\n    return (\n      <div className='Dice'>\n        {this.props.dice.map((d, idx) => (\n          <Die\n            handleClick={this.props.handleClick}\n            val={d}\n            locked={this.props.locked[idx]}\n            idx={idx}\n            key={idx}\n            disabled={this.props.disabled}\n            rolling={this.props.rolling && !this.props.locked[idx]}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Dice;\n","import React, { Component } from \"react\";\nimport \"./RuleRow.css\";\n\nclass RuleRow extends Component {\n  render() {\n    const { score, name, doScore, description } = this.props;\n    const disabled = score !== undefined;\n    return (\n      <tr\n        className={`RuleRow RuleRow-${disabled ? \"disabled\" : \"active\"}`}\n        onClick={disabled ? null : doScore}\n      >\n        <td className='RuleRow-name'>{name}</td>\n        <td className='RuleRow-score'>{disabled ? score : description}</td>\n      </tr>\n    );\n  }\n}\n\nexport default RuleRow;\n","/** Rule for Yahtzee scoring.\n *\n * This is an \"abstract class\"; the real rules are subclasses of these.\n * This stores all parameters passed into it as properties on the instance\n * (to simplify child classes so they don't need constructors of their own).\n *\n * It contains useful functions for summing, counting values, and counting\n * frequencies of dice. These are used by subclassed rules.\n */\n\nclass Rule {\n  constructor(params) {\n    // put all properties in params on instance\n    Object.assign(this, params);\n  }\n\n  sum(dice) {\n    // sum of all dice\n    return dice.reduce((prev, curr) => prev + curr);\n  }\n\n  freq(dice) {\n    // frequencies of dice values\n    const freqs = new Map();\n    for (let d of dice) freqs.set(d, (freqs.get(d) || 0) + 1);\n    return Array.from(freqs.values());\n  }\n\n  count(dice, val) {\n    // # times val appears in dice\n    return dice.filter(d => d === val).length;\n  }\n}\n\n/** Given a sought-for val, return sum of dice of that val.\n *\n * Used for rules like \"sum of all ones\"\n */\n\nclass TotalOneNumber extends Rule {\n  evalRoll = dice => {\n    return this.val * this.count(dice, this.val);\n  };\n}\n\n/** Given a required # of same dice, return sum of all dice.\n *\n * Used for rules like \"sum of all dice when there is a 3-of-kind\"\n */\n\nclass SumDistro extends Rule {\n  evalRoll = dice => {\n    // do any of the counts meet of exceed this distro?\n    return this.freq(dice).some(c => c >= this.count) ? this.sum(dice) : 0;\n  };\n}\n\n/** Check if full house (3-of-kind and 2-of-kind) */\n// [1,2,2,2,1]\nclass FullHouse extends Rule {\n  evalRoll = dice => {\n    const freqs = this.freq(dice);\n    return freqs.includes(2) && freqs.includes(3) ? this.score : 0;\n  };\n}\n\n/** Check for small straights. */\n\nclass SmallStraight extends Rule {\n  evalRoll = dice => {\n    const d = new Set(dice);\n    // straight can be 234 + either 1 or 5\n    if (d.has(2) && d.has(3) && d.has(4) && (d.has(1) || d.has(5)))\n      return this.score;\n\n    // or 345 + either 2 or 6\n    if (d.has(3) && d.has(4) && d.has(5) && (d.has(2) || d.has(6)))\n      return this.score;\n\n    return 0;\n  };\n}\n\n/** Check for large straights. */\n\nclass LargeStraight extends Rule {\n  evalRoll = dice => {\n    const d = new Set(dice);\n\n    // large straight must be 5 different dice & only one can be a 1 or a 6\n    return d.size === 5 && (!d.has(1) || !d.has(6)) ? this.score : 0;\n  };\n}\n\n/** Check if all dice are same. */\n\nclass Yahtzee extends Rule {\n  evalRoll = dice => {\n    // all dice must be the same\n    return this.freq(dice)[0] === 5 ? this.score : 0;\n  };\n}\n\n// ones, twos, etc score as sum of that value\nconst ones = new TotalOneNumber({ val: 1, description: \"1 point per 1\" });\nconst twos = new TotalOneNumber({ val: 2, description: \"2 points per 2\" });\nconst threes = new TotalOneNumber({ val: 3, description: \"3 points per 3\" });\nconst fours = new TotalOneNumber({ val: 4, description: \"4 points per 4\" });\nconst fives = new TotalOneNumber({ val: 5, description: \"5 points per 5\" });\nconst sixes = new TotalOneNumber({ val: 6, description: \"6 points per 6\" });\n\n// three/four of kind score as sum of all dice\nconst threeOfKind = new SumDistro({\n  count: 3,\n  description: \"Sum all dice if 3 are the same\"\n});\nconst fourOfKind = new SumDistro({\n  count: 4,\n  description: \"Sum all dice if 4 are the same\"\n});\n\n// full house scores as flat 25\nconst fullHouse = new FullHouse({\n  score: 25,\n  description: \"25 points for a full house\"\n});\n\n// small/large straights score as 30/40\nconst smallStraight = new SmallStraight({\n  score: 30,\n  description: \"30 points for a small straight\"\n});\nconst largeStraight = new LargeStraight({\n  score: 40,\n  description: \"40 points for a large straight\"\n});\n\n// yahtzee scores as 50\nconst yahtzee = new Yahtzee({\n  score: 50,\n  description: \"50 points for yahtzee\"\n});\n\n// for chance, can view as some of all dice, requiring at least 0 of a kind\nconst chance = new SumDistro({ count: 0, description: \"Sum of all dice\" });\n\nexport {\n  ones,\n  twos,\n  threes,\n  fours,\n  fives,\n  sixes,\n  threeOfKind,\n  fourOfKind,\n  fullHouse,\n  smallStraight,\n  largeStraight,\n  yahtzee,\n  chance\n};\n","import React, { Component } from \"react\";\nimport RuleRow from \"./RuleRow\";\nimport \"./ScoreTable.css\";\nimport {\n  ones,\n  twos,\n  threes,\n  fours,\n  fives,\n  sixes,\n  threeOfKind,\n  fourOfKind,\n  fullHouse,\n  smallStraight,\n  largeStraight,\n  yahtzee,\n  chance\n} from \"./Rules\";\n\nclass ScoreTable extends Component {\n  getTotalScore() {\n    const { scores } = this.props;\n    let totalScore = 0;\n    for (let key in scores) {\n      if (scores[key]) totalScore += scores[key];\n    }\n    return totalScore;\n  }\n  render() {\n    const { scores, doScore } = this.props;\n\n    return (\n      <div className='ScoreTable'>\n        <section className='ScoreTable-section'>\n          <h2>Upper</h2>\n          <table cellSpacing='0'>\n            <tbody>\n              <RuleRow\n                name='Ones'\n                score={scores.ones}\n                description={ones.description}\n                doScore={evt => doScore(\"ones\", ones.evalRoll)}\n              />\n              <RuleRow\n                name='Twos'\n                score={scores.twos}\n                description={twos.description}\n                doScore={evt => doScore(\"twos\", twos.evalRoll)}\n              />\n              <RuleRow\n                name='Threes'\n                score={scores.threes}\n                description={threes.description}\n                doScore={evt => doScore(\"threes\", threes.evalRoll)}\n              />\n              <RuleRow\n                name='Fours'\n                score={scores.fours}\n                description={fours.description}\n                doScore={evt => doScore(\"fours\", fours.evalRoll)}\n              />\n              <RuleRow\n                name='Fives'\n                score={scores.fives}\n                description={fives.description}\n                doScore={evt => doScore(\"fives\", fives.evalRoll)}\n              />\n              <RuleRow\n                name='Sixes'\n                score={scores.sixes}\n                description={sixes.description}\n                doScore={evt => doScore(\"sixes\", sixes.evalRoll)}\n              />\n            </tbody>\n          </table>\n        </section>\n        <section className='ScoreTable-section ScoreTable-section-lower'>\n          <h2>Lower</h2>\n          <table cellSpacing='0'>\n            <tbody>\n              <RuleRow\n                name='Three of Kind'\n                score={scores.threeOfKind}\n                description={threeOfKind.description}\n                doScore={evt => doScore(\"threeOfKind\", threeOfKind.evalRoll)}\n              />\n              <RuleRow\n                name='Four of Kind'\n                score={scores.fourOfKind}\n                description={fourOfKind.description}\n                doScore={evt => doScore(\"fourOfKind\", fourOfKind.evalRoll)}\n              />\n              <RuleRow\n                name='Full House'\n                score={scores.fullHouse}\n                description={fullHouse.description}\n                doScore={evt => doScore(\"fullHouse\", fullHouse.evalRoll)}\n              />\n              <RuleRow\n                name='Small Straight'\n                score={scores.smallStraight}\n                description={smallStraight.description}\n                doScore={evt =>\n                  doScore(\"smallStraight\", smallStraight.evalRoll)\n                }\n              />\n              <RuleRow\n                name='Large Straight'\n                score={scores.largeStraight}\n                description={largeStraight.description}\n                doScore={evt =>\n                  doScore(\"largeStraight\", largeStraight.evalRoll)\n                }\n              />\n              <RuleRow\n                name='Yahtzee'\n                score={scores.yahtzee}\n                description={yahtzee.description}\n                doScore={evt => doScore(\"yahtzee\", yahtzee.evalRoll)}\n              />\n              <RuleRow\n                name='Chance'\n                score={scores.chance}\n                description={chance.description}\n                doScore={evt => doScore(\"chance\", chance.evalRoll)}\n              />\n            </tbody>\n          </table>\n        </section>\n        <h2>TOTAL SCORE: {this.getTotalScore()}</h2>\n      </div>\n    );\n  }\n}\n\nexport default ScoreTable;\n","import React, { Component } from \"react\";\nimport Dice from \"./Dice\";\nimport ScoreTable from \"./ScoreTable\";\nimport \"./Game.css\";\n\nconst NUM_DICE = 5;\nconst NUM_ROLLS = 3;\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dice: Array.from({ length: NUM_DICE }),\n      locked: Array(NUM_DICE).fill(false),\n      rollsLeft: NUM_ROLLS,\n      rolling: false,\n      scores: {\n        ones: undefined,\n        twos: undefined,\n        threes: undefined,\n        fours: undefined,\n        fives: undefined,\n        sixes: undefined,\n        threeOfKind: undefined,\n        fourOfKind: undefined,\n        fullHouse: undefined,\n        smallStraight: undefined,\n        largeStraight: undefined,\n        yahtzee: undefined,\n        chance: undefined\n      }\n    };\n    console.log(this.state);\n    this.roll = this.roll.bind(this);\n    this.doScore = this.doScore.bind(this);\n    this.toggleLocked = this.toggleLocked.bind(this);\n    this.animateRoll = this.animateRoll.bind(this);\n  }\n  componentDidMount() {\n    this.animateRoll();\n  }\n\n  animateRoll() {\n    this.setState({ rolling: true }, () => {\n      setTimeout(this.roll, 1000);\n    });\n  }\n\n  roll(evt) {\n    // roll dice whose indexes are in reroll\n    this.setState(st => ({\n      dice: st.dice.map((d, i) =>\n        st.locked[i] ? d : Math.ceil(Math.random() * 6)\n      ),\n      locked: st.rollsLeft > 1 ? st.locked : Array(NUM_DICE).fill(true),\n      rollsLeft: st.rollsLeft - 1,\n      rolling: false\n    }));\n  }\n\n  toggleLocked(idx) {\n    // toggle whether idx is in locked or not\n    if (this.state.rollsLeft > 0 && !this.state.rolling) {\n      this.setState(st => ({\n        locked: [\n          ...st.locked.slice(0, idx),\n          !st.locked[idx],\n          ...st.locked.slice(idx + 1)\n        ]\n      }));\n    }\n  }\n\n  doScore(rulename, ruleFn) {\n    // evaluate this ruleFn with the dice and score this rulename\n    this.setState(st => ({\n      scores: { ...st.scores, [rulename]: ruleFn(this.state.dice) },\n      rollsLeft: NUM_ROLLS,\n      locked: Array(NUM_DICE).fill(false)\n    }));\n    this.animateRoll();\n  }\n\n  displayRollInfo() {\n    const messages = [\n      \"0 Rolls Left\",\n      \"1 Roll Left\",\n      \"2 Rolls Left\",\n      \"Starting Round\"\n    ];\n    return messages[this.state.rollsLeft];\n  }\n\n  render() {\n    const { dice, locked, rollsLeft, rolling, scores } = this.state;\n    return (\n      <div className='Game'>\n        <header className='Game-header'>\n          <h1 className='App-title'>Yahtzee!</h1>\n          <section className='Game-dice-section'>\n            <Dice\n              dice={dice}\n              locked={locked}\n              handleClick={this.toggleLocked}\n              disabled={rollsLeft === 0}\n              rolling={rolling}\n            />\n            <div className='Game-button-wrapper'>\n              <button\n                className='Game-reroll'\n                disabled={locked.every(x => x) || rollsLeft === 0 || rolling}\n                onClick={this.animateRoll}\n              >\n                {this.displayRollInfo()}\n              </button>\n            </div>\n          </section>\n        </header>\n        <ScoreTable doScore={this.doScore} scores={scores} />\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React, { Component } from \"react\";\nimport Game from \"./Game\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='App'>\n        <Game />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"@fortawesome/fontawesome-free/css/all.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}